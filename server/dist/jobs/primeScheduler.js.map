{"version":3,"file":"primeScheduler.js","sources":["jobs/primeScheduler.ts"],"sourceRoot":"/","sourcesContent":["import schedule from 'node-schedule';\nimport { Settings } from '../db/settingsSchema.js';\nimport logger from '../logger.js';\nimport { updateDeviceStatus } from '../routes/deviceStatus/updateDeviceStatus.js';\nimport { TimeZone } from '../db/timeZones.js';\nimport { executeCalibrateSensors } from './calibrateSensors.js';\nimport { Side } from '../db/schedulesSchema.js';\nimport moment from 'moment-timezone';\nimport settingsDB from '../db/settings.js';\nimport serverStatus from '../serverStatus.js';\nimport servicesDB from '../db/services.js';\nimport reboot from './reboot.js';\n\n\nconst scheduleRebootJob = (onHour: number, onMinute: number, timeZone: TimeZone) => {\n  const dailyRule = new schedule.RecurrenceRule();\n  dailyRule.hour = onHour;\n  dailyRule.minute = onMinute;\n  dailyRule.tz = timeZone;\n\n  const time = `${String(onHour).padStart(2,'0')}:${String(onMinute).padStart(2,'0')}`;\n  logger.debug(`Scheduling daily reboot job at ${time}`);\n  schedule.scheduleJob(`daily-reboot-${time}`, dailyRule, async () => {\n    try {\n      await settingsDB.read();\n\n      if (!settingsDB.data.rebootDaily) {\n        logger.info('Daily reboot job is disabled, skipping...');\n        return;\n      }\n      logger.info(`Executing scheduled reboot job`);\n      reboot();\n      serverStatus.status.alarmSchedule.status = 'healthy';\n      serverStatus.status.alarmSchedule.message = '';\n    } catch (error: unknown) {\n      serverStatus.status.alarmSchedule.status = 'failed';\n      const message = error instanceof Error ? error.message : String(error);\n      serverStatus.status.alarmSchedule.message = message;\n      logger.error(error);\n    }\n  });\n};\n\nconst scheduleCalibrationJob = (onHour: number, onMinute: number, timeZone: TimeZone, side: Side) => {\n  const dailyRule = new schedule.RecurrenceRule();\n  dailyRule.hour = onHour;\n  dailyRule.minute = onMinute;\n  dailyRule.tz = timeZone;\n\n  const time = `${String(onHour).padStart(2,'0')}:${String(onMinute).padStart(2,'0')}`;\n  logger.debug(`Scheduling daily calibration job at ${time} for ${side}`);\n  schedule.scheduleJob(`daily-calibration-${time}-${side}`, dailyRule, async () => {\n    await servicesDB.read();\n    if (!servicesDB.data.biometrics.enabled) {\n      logger.debug('Not executing calibration job, biometrics is disabled');\n      return;\n    }\n    logger.info(`Executing scheduled calibration job for ${side}`);\n    executeCalibrateSensors(side, moment().subtract(6, 'hours').toISOString(), moment().toISOString());\n  });\n};\n\n\nexport const schedulePrimingRebootAndCalibration = (settingsData: Settings) => {\n  const { timeZone, primePodDaily } = settingsData;\n  if (timeZone === null) return;\n  if (!primePodDaily.enabled) return;\n  const dailyRule = new schedule.RecurrenceRule();\n  const { time } = primePodDaily;\n  const [onHour, onMinute] = time.split(':').map(Number);\n  dailyRule.hour = onHour;\n  dailyRule.minute = onMinute;\n  dailyRule.tz = timeZone;\n\n  scheduleRebootJob(onHour - 1, onMinute, timeZone);\n  scheduleCalibrationJob(onHour, 0, timeZone, 'left');\n  scheduleCalibrationJob(onHour, 30, timeZone, 'right');\n\n  logger.debug(`Scheduling daily prime job at ${primePodDaily.time}`);\n  schedule.scheduleJob(`daily-priming-${time}`, dailyRule, async () => {\n    try {\n      logger.info(`Executing scheduled prime job`);\n      await updateDeviceStatus({ isPriming: true });\n      serverStatus.status.primeSchedule.status = 'healthy';\n      serverStatus.status.primeSchedule.message = '';\n    } catch (error: unknown) {\n      serverStatus.status.primeSchedule.status = 'failed';\n      const message = error instanceof Error ? error.message : String(error);\n      serverStatus.status.primeSchedule.message = message;\n      logger.error(error);\n    }\n  });\n};\n"],"names":[],"mappings":"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","debug_id":"f87d278a-9345-5986-93c0-6b6e1923886e"}